class Solution {
public:
    void findLeaves(TreeNode *root, vector<int>&v)
    {
        if(root == NULL)
        {
            return ;
        }
        if(root->left == NULL && root->right == NULL)
        {
            v.push_back(root->val);
        }
        findLeaves(root->left,v);
        findLeaves(root->right,v);
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) 
    {
        if((root1 == NULL && root2!=NULL ) && (root2 == NULL && root1!=NULL))
        {
            return false;
        }
        vector<int>v1,v2;
        findLeaves(root1,v1);
        findLeaves(root2,v2);
        if(v1.size() == v2.size())
        {
            for(int i=0;i<v1.size();i++)
            {
                if(v1[i]!=v2[i])
                {
                    return false;
                }
            }
        }
        else
        {
            return false;
        }
        return true;
    }
};
