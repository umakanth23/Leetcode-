/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) 
    {
        if(head == NULL || head->next == NULL)
            return head;
        
        ListNode *dm = new ListNode(-1);
        dm ->next = head;
        ListNode *curr = dm;
        while(curr->next!=NULL && curr->next->next!=NULL)
        {
            if(curr->next->val == curr->next->next->val)
            {
                int x = curr->next->val;
                while(curr->next!=NULL && curr->next->val == x)
                {
                    curr->next = curr->next->next;
                }
            }
            else
            {
                curr = curr->next;
            }
        }
        return dm->next;
    }
};
