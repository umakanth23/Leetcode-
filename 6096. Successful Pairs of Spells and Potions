class Solution {
public:
    int bsearch(vector<int>&ar,int n,long long int x,long long int p)
    {
        int l= 0 , h=n-1;
        int res = -1;
        while(l<=h)
        {
            int mid = l + (h-l)/2;
            long long int val = ar[mid]*x;
            if(val>=p)
            {
                res = mid;
                h = mid-1;
            }
            else
            {
                l = mid+1;
            }
        }
        return res;
        
    }
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) 
    {   
        int n = spells.size();
        int m = potions.size();
        sort(potions.begin(),potions.end());
        vector<int>v;
        for(auto x:spells)
        {
            int ind = bsearch(potions,m,x,success);
            if(ind == -1)
            {
                v.push_back(0);
            }
            else
            {
                int c = m - ind;
                v.push_back(c);
            }
        }
        return v;
    }
};
