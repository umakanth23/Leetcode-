/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) 
    {
         vector<double>v;
        if(root == NULL) return v;
        queue<TreeNode*>q;
        q.push(root);
        while(q.empty() == false)
        {
            int x = q.size();
            vector<int>vv;
            for(int i=0;i<x;i++)
            {
                TreeNode *p = q.front();
                q.pop();
                vv.push_back(p->val);
                if(p->left !=NULL )
                    q.push(p->left);
                if(p->right !=NULL )
                    q.push(p->right);
            }
            double d = 0;
            d = accumulate(vv.begin(),vv.end(),d);
            d = d/vv.size();
            v.push_back(d);
        }
        return v;
        
    }
};
